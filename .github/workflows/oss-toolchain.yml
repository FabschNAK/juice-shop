name: "OSS demo toolchain"

on:
  push:
    branches:
      - master
  pull_request:
jobs:
  # Trivy:
  #   name: Trivy
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v4

  #     - name: Run Trivy vulnerability scanner in IaC mode
  #       uses: aquasecurity/trivy-action@0.28.0
  #       with:
  #         scan-type: 'config'
  #         hide-progress: true
  #         format: 'sarif'
  #         output: 'trivy-results.sarif'
  #         exit-code: '0'
  #         severity: 'CRITICAL,HIGH,MEDIUM,LOW'

  #     - name: Upload Trivy scan results to GitHub Security tab
  #       uses: github/codeql-action/upload-sarif@v3
  #       with:
  #         sarif_file: 'trivy-results.sarif'

  # Semgrep:
  #   name: Semgrep
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v4

  #     - name: Install Semgrep
  #       run: python3 -m pip install --upgrade requests && python3 -m pip install semgrep

  #     - name: Run Semgrep in default mode
  #       run: semgrep scan

  # NPM-Audit:
  #   name: NPM-Audit
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v4

  #     - name: Run npm install
  #       run: npm install

  #     - name: Run npm audit
  #       run: npm audit

  ZAP:
    name: OWASP ZAP
    runs-on: ubuntu-latest
    steps:

      - name: Prepare report directory
        run: |
          mkdir -p zap-reports
          chmod 777 zap-reports  # Volle Schreibrechte f√ºr das Verzeichnis

      - name: Run ZAP Baseline Scan
        run: |
          docker run --rm \
          -v $(pwd)/zap-reports:/zap/wrk/:rw \
          -u $(id -u):$(id -g) \ -t ghcr.io/zaproxy/zaproxy:stable zap-baseline.py \
          -t https://juice-shop.herokuapp.com/ \
          -r zap_report.html

      - name: Upload ZAP HTML Report
        uses: actions/upload-artifact@v3
        with:
          name: ZAP HTML Report
          path: zap_report.html